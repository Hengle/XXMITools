{% extends "base.ini" %}

{% if credit -%}
    {% block constantscredit -%}
        [Constants]
        global $active = 0
        global $creditinfo = 0

        [Present]
        post $active = 0
        run = CommandListCreditInfo
    {% endblock %}

    {% block commandlistscredit %}
        [CommandListCreditInfo]
        if $creditinfo == 0 && $active > 0
            pre Resource\ShaderFixes\help.ini\Notification = ResourceCreditInfo
            pre run = CustomShader\ShaderFixes\help.ini\FormatText
            pre $\ShaderFixes\help.ini\notification_timeout = time + 5.0
            $creditinfo = 1
        endif
    {% endblock %}

    {% block resourcecredit -%}
        [ResourceCreditInfo]
        type = Buffer
        data = "Created by {{ credit }}"
    {% endblock -%}
{% endif -%}

{% block overridesbuffers -%}
    {% for component in char_hash if component["draw_vb"] != "" -%}
            {% set comp_name = character_name ~ component.component_name -%}
            [TextureOverride{{ comp_name }}Position]
            hash = {{ component.position_vb }}
            vb0 = Resource{{ comp_name }}Position
            vb2 = Resource{{ comp_name }}Blend
            draw = {{ component.total_verts }}, 0
            {% if credit %}
            $active = 1
            {% endif %}

            [TextureOverride{{ comp_name }}Texcoord]
            hash = {{ component.texcoord_vb }}
            vb1 = Resource{{ comp_name }}Texcoord

            [TextureOverride{{ comp_name }}VertexLimitRaise]
            hash = {{ component.draw_vb }}
            override_vertex_count = {{ component.total_verts }}
            override_byte_stride = {{ component.strides.0 }}
    {% endfor -%}
{% endblock %}

{% block overridesibs %}
    {% for component in char_hash if component["draw_vb"] != "" -%}
            {% set tabs = "    " -%}
                [TextureOverride{{component.component_name}}IB]
                hash = {{ component.ib }}
                handling = skip
                {% if offsets is not none: -%}
                    drawindexed = auto
                {% endif -%}
            {% for object in component.objects -%}
                [TextureOverride{{ object.fullname }}]
                hash = {{ component.ib }}
                ib = Resource{{ object.fullname }}IB
                match_first_index = {{ component.object_indexes[loop.index0] }}
                ps-t0 = Resource{{ object.fullname }}Diffuse
                ps-t1 = Resource{{ object.fullname }}Lightmap
                {% for off in object.offsets -%}
                    {% if loop.previtem and loop.previtem[0] != off[0] -%}
                        {{ tabs * off[1] }}; {{ off[0] }}
                    {% endif -%}
                        {{ tabs * off[1] }}; {{ off[2] }}
                        {{ tabs * off[1] }}drawindexed = {{ off[3]}}, {{ off[5] }}, 0
                {% endfor -%}
            {% endfor -%}
    {% endfor %}
{% endblock  %}

{% block resourcetextures %}
    {% for component in char_hash %}
        {% set comp_name = character_name ~ component.component_name %}
        {% if component.strides %}
            [Resource{{ comp_name }}Position]
            type = Buffer
            stride = {{ component.strides.0 }}
            filename = {{ comp_name }}Position.buf

            [Resource{{ comp_name }}Blend]
            type = Buffer
            stride = {{ component.strides.1 }}
            filename = {{ comp_name }}Blend.buf

            [Resource{{ comp_name }}Texcoord]
            type = Buffer
            stride = {{ component.strides.2 }}
            filename = {{ comp_name }}Texcoord.buf
        {% endif %}
        
        {% for object in component.objects %}
            [Resource{{ object.fullname }}IB]
            type = Buffer
            format = DXGI_FORMAT_R32_UINT
            filename = {{ object.fullname }}.ib

        {% endfor %}
        {% for object in component.texture_hashes %}
            {% set auxidx = loop.index0 %}
            {% for tex in object %}
                {% set main_name = comp_name ~ component.object_classifications[auxidx] %}
                [Resource{{ main_name }}{{ tex[0] }}]
                filename = {{ main_name }}{{ tex[0] }}.dds

            {% endfor %}
        {% endfor %}
    {% endfor %}
{% endblock %}

{% block constants %}
    {{ self.constantscredit() }}
{% endblock %}

{% block overrides %}
    {{ self.overridesbuffers() }}
    {{ self.overridesibs() }}
{% endblock %}

{% block commandlists %}
    {{ self.commandlistscredit() }}
{% endblock %}

{% block resources %}
    {{ self.resourcetextures() }}
    {{ self.resourcecredit() }}
{% endblock %}
